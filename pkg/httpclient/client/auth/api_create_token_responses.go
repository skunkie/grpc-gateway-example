// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skunkie/grpc-gateway-example/pkg/httpclient/models"
)

// APICreateTokenReader is a Reader for the APICreateToken structure.
type APICreateTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APICreateTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAPICreateTokenCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAPICreateTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAPICreateTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAPICreateTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAPICreateTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAPICreateTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAPICreateTokenCreated creates a APICreateTokenCreated with default headers values
func NewAPICreateTokenCreated() *APICreateTokenCreated {
	return &APICreateTokenCreated{}
}

/*
APICreateTokenCreated describes a response with status code 201, with default header values.

A successful response.
*/
type APICreateTokenCreated struct {
	Payload *models.PbToken
}

// IsSuccess returns true when this api create token created response has a 2xx status code
func (o *APICreateTokenCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this api create token created response has a 3xx status code
func (o *APICreateTokenCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create token created response has a 4xx status code
func (o *APICreateTokenCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this api create token created response has a 5xx status code
func (o *APICreateTokenCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this api create token created response a status code equal to that given
func (o *APICreateTokenCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the api create token created response
func (o *APICreateTokenCreated) Code() int {
	return 201
}

func (o *APICreateTokenCreated) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenCreated  %+v", 201, o.Payload)
}

func (o *APICreateTokenCreated) String() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenCreated  %+v", 201, o.Payload)
}

func (o *APICreateTokenCreated) GetPayload() *models.PbToken {
	return o.Payload
}

func (o *APICreateTokenCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PbToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateTokenBadRequest creates a APICreateTokenBadRequest with default headers values
func NewAPICreateTokenBadRequest() *APICreateTokenBadRequest {
	return &APICreateTokenBadRequest{}
}

/*
APICreateTokenBadRequest describes a response with status code 400, with default header values.

Bad Request.
*/
type APICreateTokenBadRequest struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api create token bad request response has a 2xx status code
func (o *APICreateTokenBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api create token bad request response has a 3xx status code
func (o *APICreateTokenBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create token bad request response has a 4xx status code
func (o *APICreateTokenBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this api create token bad request response has a 5xx status code
func (o *APICreateTokenBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this api create token bad request response a status code equal to that given
func (o *APICreateTokenBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the api create token bad request response
func (o *APICreateTokenBadRequest) Code() int {
	return 400
}

func (o *APICreateTokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenBadRequest  %+v", 400, o.Payload)
}

func (o *APICreateTokenBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenBadRequest  %+v", 400, o.Payload)
}

func (o *APICreateTokenBadRequest) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateTokenForbidden creates a APICreateTokenForbidden with default headers values
func NewAPICreateTokenForbidden() *APICreateTokenForbidden {
	return &APICreateTokenForbidden{}
}

/*
APICreateTokenForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type APICreateTokenForbidden struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api create token forbidden response has a 2xx status code
func (o *APICreateTokenForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api create token forbidden response has a 3xx status code
func (o *APICreateTokenForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create token forbidden response has a 4xx status code
func (o *APICreateTokenForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this api create token forbidden response has a 5xx status code
func (o *APICreateTokenForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this api create token forbidden response a status code equal to that given
func (o *APICreateTokenForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the api create token forbidden response
func (o *APICreateTokenForbidden) Code() int {
	return 403
}

func (o *APICreateTokenForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenForbidden  %+v", 403, o.Payload)
}

func (o *APICreateTokenForbidden) String() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenForbidden  %+v", 403, o.Payload)
}

func (o *APICreateTokenForbidden) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateTokenNotFound creates a APICreateTokenNotFound with default headers values
func NewAPICreateTokenNotFound() *APICreateTokenNotFound {
	return &APICreateTokenNotFound{}
}

/*
APICreateTokenNotFound describes a response with status code 404, with default header values.

Not Found.
*/
type APICreateTokenNotFound struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api create token not found response has a 2xx status code
func (o *APICreateTokenNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api create token not found response has a 3xx status code
func (o *APICreateTokenNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create token not found response has a 4xx status code
func (o *APICreateTokenNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this api create token not found response has a 5xx status code
func (o *APICreateTokenNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this api create token not found response a status code equal to that given
func (o *APICreateTokenNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the api create token not found response
func (o *APICreateTokenNotFound) Code() int {
	return 404
}

func (o *APICreateTokenNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenNotFound  %+v", 404, o.Payload)
}

func (o *APICreateTokenNotFound) String() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenNotFound  %+v", 404, o.Payload)
}

func (o *APICreateTokenNotFound) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateTokenInternalServerError creates a APICreateTokenInternalServerError with default headers values
func NewAPICreateTokenInternalServerError() *APICreateTokenInternalServerError {
	return &APICreateTokenInternalServerError{}
}

/*
APICreateTokenInternalServerError describes a response with status code 500, with default header values.

Internal Server Error.
*/
type APICreateTokenInternalServerError struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api create token internal server error response has a 2xx status code
func (o *APICreateTokenInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api create token internal server error response has a 3xx status code
func (o *APICreateTokenInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create token internal server error response has a 4xx status code
func (o *APICreateTokenInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this api create token internal server error response has a 5xx status code
func (o *APICreateTokenInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this api create token internal server error response a status code equal to that given
func (o *APICreateTokenInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the api create token internal server error response
func (o *APICreateTokenInternalServerError) Code() int {
	return 500
}

func (o *APICreateTokenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenInternalServerError  %+v", 500, o.Payload)
}

func (o *APICreateTokenInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] apiCreateTokenInternalServerError  %+v", 500, o.Payload)
}

func (o *APICreateTokenInternalServerError) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateTokenDefault creates a APICreateTokenDefault with default headers values
func NewAPICreateTokenDefault(code int) *APICreateTokenDefault {
	return &APICreateTokenDefault{
		_statusCode: code,
	}
}

/*
APICreateTokenDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type APICreateTokenDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this Api create token default response has a 2xx status code
func (o *APICreateTokenDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this Api create token default response has a 3xx status code
func (o *APICreateTokenDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this Api create token default response has a 4xx status code
func (o *APICreateTokenDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this Api create token default response has a 5xx status code
func (o *APICreateTokenDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this Api create token default response a status code equal to that given
func (o *APICreateTokenDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the Api create token default response
func (o *APICreateTokenDefault) Code() int {
	return o._statusCode
}

func (o *APICreateTokenDefault) Error() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] Api_CreateToken default  %+v", o._statusCode, o.Payload)
}

func (o *APICreateTokenDefault) String() string {
	return fmt.Sprintf("[POST /v1/auth/token][%d] Api_CreateToken default  %+v", o._statusCode, o.Payload)
}

func (o *APICreateTokenDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
