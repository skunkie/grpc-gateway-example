// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skunkie/grpc-gateway-example/pkg/httpclient/models"
)

// APIDeleteUserReader is a Reader for the APIDeleteUser structure.
type APIDeleteUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APIDeleteUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAPIDeleteUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAPIDeleteUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAPIDeleteUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAPIDeleteUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAPIDeleteUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAPIDeleteUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAPIDeleteUserNoContent creates a APIDeleteUserNoContent with default headers values
func NewAPIDeleteUserNoContent() *APIDeleteUserNoContent {
	return &APIDeleteUserNoContent{}
}

/*
APIDeleteUserNoContent describes a response with status code 204, with default header values.

A successful response.
*/
type APIDeleteUserNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this api delete user no content response has a 2xx status code
func (o *APIDeleteUserNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this api delete user no content response has a 3xx status code
func (o *APIDeleteUserNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api delete user no content response has a 4xx status code
func (o *APIDeleteUserNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this api delete user no content response has a 5xx status code
func (o *APIDeleteUserNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this api delete user no content response a status code equal to that given
func (o *APIDeleteUserNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the api delete user no content response
func (o *APIDeleteUserNoContent) Code() int {
	return 204
}

func (o *APIDeleteUserNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserNoContent  %+v", 204, o.Payload)
}

func (o *APIDeleteUserNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserNoContent  %+v", 204, o.Payload)
}

func (o *APIDeleteUserNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *APIDeleteUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIDeleteUserBadRequest creates a APIDeleteUserBadRequest with default headers values
func NewAPIDeleteUserBadRequest() *APIDeleteUserBadRequest {
	return &APIDeleteUserBadRequest{}
}

/*
APIDeleteUserBadRequest describes a response with status code 400, with default header values.

Bad Request.
*/
type APIDeleteUserBadRequest struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api delete user bad request response has a 2xx status code
func (o *APIDeleteUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api delete user bad request response has a 3xx status code
func (o *APIDeleteUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api delete user bad request response has a 4xx status code
func (o *APIDeleteUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this api delete user bad request response has a 5xx status code
func (o *APIDeleteUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this api delete user bad request response a status code equal to that given
func (o *APIDeleteUserBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the api delete user bad request response
func (o *APIDeleteUserBadRequest) Code() int {
	return 400
}

func (o *APIDeleteUserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserBadRequest  %+v", 400, o.Payload)
}

func (o *APIDeleteUserBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserBadRequest  %+v", 400, o.Payload)
}

func (o *APIDeleteUserBadRequest) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APIDeleteUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIDeleteUserForbidden creates a APIDeleteUserForbidden with default headers values
func NewAPIDeleteUserForbidden() *APIDeleteUserForbidden {
	return &APIDeleteUserForbidden{}
}

/*
APIDeleteUserForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type APIDeleteUserForbidden struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api delete user forbidden response has a 2xx status code
func (o *APIDeleteUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api delete user forbidden response has a 3xx status code
func (o *APIDeleteUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api delete user forbidden response has a 4xx status code
func (o *APIDeleteUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this api delete user forbidden response has a 5xx status code
func (o *APIDeleteUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this api delete user forbidden response a status code equal to that given
func (o *APIDeleteUserForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the api delete user forbidden response
func (o *APIDeleteUserForbidden) Code() int {
	return 403
}

func (o *APIDeleteUserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserForbidden  %+v", 403, o.Payload)
}

func (o *APIDeleteUserForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserForbidden  %+v", 403, o.Payload)
}

func (o *APIDeleteUserForbidden) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APIDeleteUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIDeleteUserNotFound creates a APIDeleteUserNotFound with default headers values
func NewAPIDeleteUserNotFound() *APIDeleteUserNotFound {
	return &APIDeleteUserNotFound{}
}

/*
APIDeleteUserNotFound describes a response with status code 404, with default header values.

Not Found.
*/
type APIDeleteUserNotFound struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api delete user not found response has a 2xx status code
func (o *APIDeleteUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api delete user not found response has a 3xx status code
func (o *APIDeleteUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api delete user not found response has a 4xx status code
func (o *APIDeleteUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this api delete user not found response has a 5xx status code
func (o *APIDeleteUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this api delete user not found response a status code equal to that given
func (o *APIDeleteUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the api delete user not found response
func (o *APIDeleteUserNotFound) Code() int {
	return 404
}

func (o *APIDeleteUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserNotFound  %+v", 404, o.Payload)
}

func (o *APIDeleteUserNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserNotFound  %+v", 404, o.Payload)
}

func (o *APIDeleteUserNotFound) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APIDeleteUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIDeleteUserInternalServerError creates a APIDeleteUserInternalServerError with default headers values
func NewAPIDeleteUserInternalServerError() *APIDeleteUserInternalServerError {
	return &APIDeleteUserInternalServerError{}
}

/*
APIDeleteUserInternalServerError describes a response with status code 500, with default header values.

Internal Server Error.
*/
type APIDeleteUserInternalServerError struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api delete user internal server error response has a 2xx status code
func (o *APIDeleteUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api delete user internal server error response has a 3xx status code
func (o *APIDeleteUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api delete user internal server error response has a 4xx status code
func (o *APIDeleteUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this api delete user internal server error response has a 5xx status code
func (o *APIDeleteUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this api delete user internal server error response a status code equal to that given
func (o *APIDeleteUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the api delete user internal server error response
func (o *APIDeleteUserInternalServerError) Code() int {
	return 500
}

func (o *APIDeleteUserInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserInternalServerError  %+v", 500, o.Payload)
}

func (o *APIDeleteUserInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] apiDeleteUserInternalServerError  %+v", 500, o.Payload)
}

func (o *APIDeleteUserInternalServerError) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APIDeleteUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIDeleteUserDefault creates a APIDeleteUserDefault with default headers values
func NewAPIDeleteUserDefault(code int) *APIDeleteUserDefault {
	return &APIDeleteUserDefault{
		_statusCode: code,
	}
}

/*
APIDeleteUserDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type APIDeleteUserDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this Api delete user default response has a 2xx status code
func (o *APIDeleteUserDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this Api delete user default response has a 3xx status code
func (o *APIDeleteUserDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this Api delete user default response has a 4xx status code
func (o *APIDeleteUserDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this Api delete user default response has a 5xx status code
func (o *APIDeleteUserDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this Api delete user default response a status code equal to that given
func (o *APIDeleteUserDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the Api delete user default response
func (o *APIDeleteUserDefault) Code() int {
	return o._statusCode
}

func (o *APIDeleteUserDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] Api_DeleteUser default  %+v", o._statusCode, o.Payload)
}

func (o *APIDeleteUserDefault) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] Api_DeleteUser default  %+v", o._statusCode, o.Payload)
}

func (o *APIDeleteUserDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APIDeleteUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
