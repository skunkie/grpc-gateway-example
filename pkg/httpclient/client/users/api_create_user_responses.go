// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skunkie/grpc-gateway-example/pkg/httpclient/models"
)

// APICreateUserReader is a Reader for the APICreateUser structure.
type APICreateUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APICreateUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAPICreateUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAPICreateUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAPICreateUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAPICreateUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAPICreateUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAPICreateUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAPICreateUserCreated creates a APICreateUserCreated with default headers values
func NewAPICreateUserCreated() *APICreateUserCreated {
	return &APICreateUserCreated{}
}

/*
APICreateUserCreated describes a response with status code 201, with default header values.

A successful response.
*/
type APICreateUserCreated struct {
	Payload *models.PbUser
}

// IsSuccess returns true when this api create user created response has a 2xx status code
func (o *APICreateUserCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this api create user created response has a 3xx status code
func (o *APICreateUserCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create user created response has a 4xx status code
func (o *APICreateUserCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this api create user created response has a 5xx status code
func (o *APICreateUserCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this api create user created response a status code equal to that given
func (o *APICreateUserCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the api create user created response
func (o *APICreateUserCreated) Code() int {
	return 201
}

func (o *APICreateUserCreated) Error() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserCreated  %+v", 201, o.Payload)
}

func (o *APICreateUserCreated) String() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserCreated  %+v", 201, o.Payload)
}

func (o *APICreateUserCreated) GetPayload() *models.PbUser {
	return o.Payload
}

func (o *APICreateUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PbUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateUserBadRequest creates a APICreateUserBadRequest with default headers values
func NewAPICreateUserBadRequest() *APICreateUserBadRequest {
	return &APICreateUserBadRequest{}
}

/*
APICreateUserBadRequest describes a response with status code 400, with default header values.

Bad Request.
*/
type APICreateUserBadRequest struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api create user bad request response has a 2xx status code
func (o *APICreateUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api create user bad request response has a 3xx status code
func (o *APICreateUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create user bad request response has a 4xx status code
func (o *APICreateUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this api create user bad request response has a 5xx status code
func (o *APICreateUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this api create user bad request response a status code equal to that given
func (o *APICreateUserBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the api create user bad request response
func (o *APICreateUserBadRequest) Code() int {
	return 400
}

func (o *APICreateUserBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserBadRequest  %+v", 400, o.Payload)
}

func (o *APICreateUserBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserBadRequest  %+v", 400, o.Payload)
}

func (o *APICreateUserBadRequest) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateUserForbidden creates a APICreateUserForbidden with default headers values
func NewAPICreateUserForbidden() *APICreateUserForbidden {
	return &APICreateUserForbidden{}
}

/*
APICreateUserForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type APICreateUserForbidden struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api create user forbidden response has a 2xx status code
func (o *APICreateUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api create user forbidden response has a 3xx status code
func (o *APICreateUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create user forbidden response has a 4xx status code
func (o *APICreateUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this api create user forbidden response has a 5xx status code
func (o *APICreateUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this api create user forbidden response a status code equal to that given
func (o *APICreateUserForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the api create user forbidden response
func (o *APICreateUserForbidden) Code() int {
	return 403
}

func (o *APICreateUserForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserForbidden  %+v", 403, o.Payload)
}

func (o *APICreateUserForbidden) String() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserForbidden  %+v", 403, o.Payload)
}

func (o *APICreateUserForbidden) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateUserNotFound creates a APICreateUserNotFound with default headers values
func NewAPICreateUserNotFound() *APICreateUserNotFound {
	return &APICreateUserNotFound{}
}

/*
APICreateUserNotFound describes a response with status code 404, with default header values.

Not Found.
*/
type APICreateUserNotFound struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api create user not found response has a 2xx status code
func (o *APICreateUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api create user not found response has a 3xx status code
func (o *APICreateUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create user not found response has a 4xx status code
func (o *APICreateUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this api create user not found response has a 5xx status code
func (o *APICreateUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this api create user not found response a status code equal to that given
func (o *APICreateUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the api create user not found response
func (o *APICreateUserNotFound) Code() int {
	return 404
}

func (o *APICreateUserNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserNotFound  %+v", 404, o.Payload)
}

func (o *APICreateUserNotFound) String() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserNotFound  %+v", 404, o.Payload)
}

func (o *APICreateUserNotFound) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateUserInternalServerError creates a APICreateUserInternalServerError with default headers values
func NewAPICreateUserInternalServerError() *APICreateUserInternalServerError {
	return &APICreateUserInternalServerError{}
}

/*
APICreateUserInternalServerError describes a response with status code 500, with default header values.

Internal Server Error.
*/
type APICreateUserInternalServerError struct {
	Payload *models.RPCStatus
}

// IsSuccess returns true when this api create user internal server error response has a 2xx status code
func (o *APICreateUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api create user internal server error response has a 3xx status code
func (o *APICreateUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api create user internal server error response has a 4xx status code
func (o *APICreateUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this api create user internal server error response has a 5xx status code
func (o *APICreateUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this api create user internal server error response a status code equal to that given
func (o *APICreateUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the api create user internal server error response
func (o *APICreateUserInternalServerError) Code() int {
	return 500
}

func (o *APICreateUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserInternalServerError  %+v", 500, o.Payload)
}

func (o *APICreateUserInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/users][%d] apiCreateUserInternalServerError  %+v", 500, o.Payload)
}

func (o *APICreateUserInternalServerError) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateUserDefault creates a APICreateUserDefault with default headers values
func NewAPICreateUserDefault(code int) *APICreateUserDefault {
	return &APICreateUserDefault{
		_statusCode: code,
	}
}

/*
APICreateUserDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type APICreateUserDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this Api create user default response has a 2xx status code
func (o *APICreateUserDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this Api create user default response has a 3xx status code
func (o *APICreateUserDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this Api create user default response has a 4xx status code
func (o *APICreateUserDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this Api create user default response has a 5xx status code
func (o *APICreateUserDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this Api create user default response a status code equal to that given
func (o *APICreateUserDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the Api create user default response
func (o *APICreateUserDefault) Code() int {
	return o._statusCode
}

func (o *APICreateUserDefault) Error() string {
	return fmt.Sprintf("[POST /v1/users][%d] Api_CreateUser default  %+v", o._statusCode, o.Payload)
}

func (o *APICreateUserDefault) String() string {
	return fmt.Sprintf("[POST /v1/users][%d] Api_CreateUser default  %+v", o._statusCode, o.Payload)
}

func (o *APICreateUserDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *APICreateUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
